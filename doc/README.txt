## to deploy an updated configuration

	./bin/xenadu.py --host=domination --guest=highriseweb --deploy

---

## If starting from scratch

### copy from template into new Xenadu description

	svn cp share/domination/_template share/domination/highriseweb

### set initial values of guest machine

	vi share/domination/highriseweb/highriseweb.py

> set hostname
>
> ip address
>
> RAM (in MB)
>
> swap (in MB)
>
> disk image size (in MB)

### create and bootstrap guest

	export xenadu_cmd="./bin/xenadu.py --host=domination --guest=highriseweb"
	$xenadu_cmd --guest.create
	$xenadu_cmd --ssh.bootstrap
	$xenadu_cmd --ssh.keys.import
	$xenadu_cmd --slurp.to=interfaces
	$xenadu_cmd --slurp.to=hostname

### update dom0 to know about guest

add IP address to hosts

	vi share/domination/dom0/net/hosts

add reference to xen guest configuration in dom0 description

	vi share/domination/dom0/dom0.py

> X.add("/etc/xen/domains/highriseweb.saperea.com.cfg", file("../../highriseweb/dom0/xen.cfg"))

import xen guest configuration generated by xen-tools, then deploy to dom0

	./bin/xenadu.py --host=domination --guest=dom0 --slurp.from=/etc/xen/domains/highriseweb.saperea.com.cfg
	./bin/xenadu.py --host=domination --guest=dom0 --deploy

deploy Xenadu description to new guest

	$xenadu_cmd --deploy

### ensure that apt is updated:

	ssh root@highriseweb "apt-get update"

---

## If rebuilding an image

### halt the remote guest

`ssh root@dom0.domination xm shutdown -w highriseweb.saperea.com`

### possibly deploy new dom0 configuration

`./bin/xenadu.py --host=domination --guest=dom0 --deploy`

### remove old ssh host key

`ssh-keygen -R highriseweb.saperea.com`

...then start from the top of the page, doing what is required.
